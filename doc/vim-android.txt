*vim-android.txt*    For Vim version 7.3    Last change: 2013 July 13

Author:         Horacio Sanson
Licence:        Vim licence, see |license|
Homepage:       https://github.com/hsanson/vim-android
Version:        1.2.0

==============================================================================
Contents                                   *vim-android* *vim-android-contents*

         1. Intro ........................... |vim-android-intro|
              Changelog                       |vim-android-changelog|
              Supported Features              |vim-android-features|
              Known Issues                    |vim-android-issues|
         2. Requirements .................... |vim-android-requirements|
         3. Installation .................... |vim-android-installation|
         4. Usage ........................... |vim-android-usage|
              Commands ...................... |vim-android-commands|
              Key mappings .................. |vim-android-keys|
         5. Configuration ................... |vim-android-configuration|
         6. Todo ............................ |vim-android-todo|
         7. Credits ......................... |vim-android-credits|

==============================================================================
1. Intro                                                      *vim-android-intro*

vim-android is a plugin that facilitates the development of Android
applications withing vim. When editing a java or xml file this plugin tries
to find an AndroidManifest.xml file in the current directory and if found it
cofigures a set of variables and commands that allows easier development for
Android applications.

------------------------------------------------------------------------------
Changelog                                                  *vim-android-changelog*

IMPORTANT: Since I do not use ant anymore for android development and Android
Studio with the gradle plugin has come a long way now I am removing all ant
related functions from the plugin. It is difficult to maintain funcionality
that I do not use.

------------------------------------------------------------------------------
SUPPORTED FEATURES                                         *vim-android-features*

The following features are supported by vim-android:

  - Auto-detection of Android projects when opening a Java or XML file. This
    relies on the AndroidManifest.xml file being located on the current
    working directory.
  - Add android compiler that sets the appropriate errorformat and makeprg
    options needed to build Gradle based Android projects.
  - Updates the CLASSPATH environment variable to include paths for your
    current project, external libs, external lib-projects and the current
    target Android SDK jars. This allows auto-completion of Java code using
    other plugins such as javacomplete2.
  - Adds useful commands to compile and install your application APK into
    your emulator/devices.
  - Adds useful commands to generate tags for the current project source and
    the Android SDK sources.

------------------------------------------------------------------------------
Known Issues                                             *vim-android-issues*

  - The gradle build system error outputs do not show the original source
    filename. Instead they show a temporary file stored in the build folder.
    For this reason we cannot jump to the source file when browsing build
    errors in the quickfix window.

      See: https://code.google.com/p/android/issues/detail?id=57513

  - The javacomplete plugin is nice but in some situations it hangs or spits
    thousands of incomprensible error messages. For this reason I recommend
    you use the new javacomplete2 pluting instead:

      See: https://github.com/artur-shaik/vim-javacomplete2

==============================================================================
2. Requirements                                        *vim-android-requirements*

The following requirements have to be met in order to be able to use vim-android:

  - Vim 7.3 or Latest Neovim. This plugin may also work with previous versions
    but I have only tested Vim 7.3 and latest Neovim.
  - Android SDK installed and with the platform-tools directory set in your
    PATH environment variable.
  - Gradle 1.6+ in your PATH to enable builds via ant or gradle respectively.
  - The exuberant-ctags package if you want to generate tags for the android
    project, dependencies and the Android SDK.

==============================================================================
3. Installation                                        *vim-android-installation*

It is recommended that you use a package manager like Pathogen or Vundle to
install this plugin. In the case of Vundle all you have to do is add this
line to your vimrc:
>
       Bundle 'hsanson/vim-android'
<
and then inside vim run the |:BundleInstall| command.

==============================================================================
4. Usage                                                      *vim-android-usage*

Before using this plugin you must tell it where you have the android SDK
installed. There are two ways to do this: you can set the ANDROID_HOME
environment variable to the absolute path of the android SDK or you can set
it to the global variable g:android_sdk_path in your vimrc file.

This plugin assumes your current working directory is the root path of the
android project you are working on. More precisely your current path must be
the same where the AndroidManifest.xml file is located or the plugin won't
load. When you open a Java or XML file this plugin checks for the presence of
the AndroidManifest.xml and if it exists it enables several commands to build
and install android apps into emulators and/or devices.

Optionally you may also set |g:gradle_path| to tell the plugin where to look
for the gradle binaries. Check the options documentation below for more
details on these and other options.

------------------------------------------------------------------------------
COMMANDS                                                   *vim-android-commands*

:Gradle <options>
    Invokes gradle passing the <options> verbatim. You command accepted by
    gradle using this command.

:Android <options>
    This is an alias to the Gradle command.

:AndroidBuild <mode>                                            *:AndroidBuild*
    This command is left for backward compatibility. Instead use the Android
    or Gradle commands. Builds the application APK. The <mode> parameter can
    be release or debug mode for ant projects and any  buildType (e.g. release,
    debug) on gradle projects. If the <mode> parameter is omitted then if
    executes the default build for gradle and debug for ant projects.

:AndroidTest                                                    *:AndroidTest*
    Runs the tests for gradle and ant projects. This is the same and calling
    ant test or gradle test on the terminal.

:AndroidClean                                                   *:AndroidClean*
    Cleans the build auto-generated files.

:AndroidInstall <mode>                                   *:AndroidDebugInstall*
    Build and installs the application in <mode> mode. In the case that you
    have several emulators running and/or several devices connected then this
    command will present you a list of emulators/devices so you can choose to
    which one the APK should be installed to. If there are not apk files
    build this command fails with an error. Ensure you build your project before
    installing it.

:AndroidUninstall                                           *:AndroidUninstall*
    This command allows to uninstall the application. If you have several
    emulators running and/or several devices connected, then this command will
    prompt you with a list of emulators/devices so you can choose from which one
    the app should be uninstalled.

:AndroidUpdateTags                                          *:AndroidUpdateTags*
    This is a simple helper command that generates a tags file from the
    android sdk sources, the library dependencies and the current android
    project. The generated tags file is located in the |g:android_sdk_tags|
    folder and is automatically set into the vim tags variable.

    Generating the tags file for the Android SDK requires that you have the
    exuberant-ctags command utility installed and available in your PATH.
    Plain ctags may work too but some plugins (e.g. YouCompleteMe) do require
    some flags available only in exuberant-ctags.

    You should invoke this command every time you change library dependencies,
    the android target API, and you project source files. You may create an
    command to update the tags everytime a file is saved.

:AndroidDevices                                               *:AndroidDevices*
    Lists all android devices connected and all running emulators.

:AndroidEmulator                                             *:AndroidEmulator*
    Allows to start defined avd emulators within vim.

------------------------------------------------------------------------------
KEY MAPPINGS                                                  *vim-android-keys*
By default the vim-android plugin has no mappings and all functionality is
accessed using the commmands |vim-android-commands| but this does not impede
you from creating your own mappings.

For example you can map a function key (e.g. F5) so it invokes the
:AndroidDebugInstall command:

>
nmap <F5> <ESC>:AndroidInstall debug<CR>
<

this way anytime you press the <F5> key it will build and install your
Android application.

==============================================================================
5. Configuration                                     *vim-android-configuration*

                                                        *g:android_sdk_path*
g:android_sdk_path~
Default: $ANDROID_HOME

This option must specify the location of your Android SDK installation.

Example:
>
        let g:android_sdk_path = '/opt/adroid-sdk'
<

                                                               *g:gradle_path*
g:gradle_path
Default: $GRADLE_HOME

When building gradle based projects we need to use the gradle tool to build
and install APK files. The g:gradle_path should be set to the absolute
directory path where gradle is installed. If g:gradle_path is not set then we
fallback to the $GRADLE_HOME environment variable. If none is set then we
search the gradle binary using the PATH environment variable.

                                                            *g:android_adb_tool*
g:android_adb_tool~
Default: {g:android_sdk_path}/tools/adb

This plugin relies heavily on the Android ADB tool to query devices/emulators
and to install the APK files. By default this tool is found inside the
Android SDK so you do not need to set this variable but if for some reason in
you installation the ADB tool is located in a different path you can
explicitly tell the plugin where to find it using this variable.

Example:
>
        let g:android_adb_tool=/path/to/tool/adb
<

                                                            *g:android_sdk_tags*
g:android_sdk_tags~
Default: $(PWD)/.tags

This variable is the path were the tags file generated by the
|:AndroidUpdateTags| command. If you prefer the tags file to be located on
another place you can set this variable in your vimrc file to that location.

Example:
>
        let g:android_sdk_tags=/path/to/tags/project.tags
<

------------------------------------------------------------------------------
ANDROID OMNI-COMPLETION                             *vim-android-omnicomplete*

This plugin by itself does not provide omni-completion of Android classes
and/or methods. Instead it relies on the javacomplete plugin to handle the
auto-completion (https://github.com/artur-shaik/vim-javacomplete2). Make
sure you have the javacomplete2 plugin intalled along this one.

This plugin takes care of updating the CLASSPATH environment variable and the
g:JavaComplete_Libs variable needed by javacomplete2 plugin to enable completion
of Android classes and your project classes.

==============================================================================
9. Todo                                                       *vim-android-todo*

  - Better Android XML omni-completion.
  - Better support AndroidAnnotation errors.
  - Parse and show lint errors in quickfix window.
  - Parse and show test errors in quickfix window.
  - Support for syntastic.

==============================================================================
10. Credits                                                *vim-android-credits*

vim-android was written from scratch but I learned and used as reference
several other plugins:

 - https://github.com/bpowell/vim-android
 - https://github.com/mgarriott/vim-android
 - https://github.com/artur-shaik/vim-javacomplete2

==============================================================================
 vim: tw=78 ts=8 sw=4 sts=4 et ft=help
